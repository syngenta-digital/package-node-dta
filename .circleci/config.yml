version: 2.1
orbs:
    aws-cli: circleci/aws-cli@1.2.1
    slack: circleci/slack@3.4.2
commands:
    node-install:
        steps:
            - run: npm ci
    node-linter:
        steps:
            - run: npm run lint -- --format html --output-file ./coverage/lint/index.html
            - store_artifacts:
                path: ./coverage
    node-test:
        steps:
            - run:
                when: always
                command: npm run test -- --reporter mocha-multi-reporters --reporter-options configFile=./test/reporter-config.json
                environment:
                    MOCHAWESOME_REPORTFILENAME: index.html
                    MOCHAWESOME_REPORTDIR: ./coverage/unit-test
            - store_test_results:
                path: ./coverage/unit-test
            - store_artifacts:
                path: ./coverage
    node-report:
        steps:
            - run: npm run report -- --reporter=html
            - store_artifacts:
                path: ./coverage
    npm-deploy:
        steps:
            - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
            - run: npm version $CIRCLE_TAG --allow-same-version --no-git-tag-version
            - run: npm publish --access public
    slack-status:
        steps:
            - slack/status:
                mentions: '${CIRCLE_USERNAME}, version=$CIRCLE_TAG'
    slack-error:
        steps:
            - slack/status:
                fail_only: true
                mentions: '${CIRCLE_USERNAME}'
jobs:
    install-build-test:
        docker:
            - image: node:12
            -
                image: amazon/dynamodb-local
                command: -jar DynamoDBLocal.jar -inMemory -port 4000
                environment:
                    AWS_ACCESS_KEY_ID: 0
                    AWS_SECRET_ACCESS_KEY: 0
                    AWS_DEFAULT_REGION: us-east-2
            -
                image: neo4j:3.5.3-enterprise
                environment:
                    - NEO4J_dbms_memory_pagecache_size=1G
                    - NEO4J_dbms.memory.heap.initial_size=1G
                    - NEO4J_dbms_memory_heap_max__size=1G
                    - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
                    - NEO4J_AUTH=neo4j/password
            -
                image: localstack/localstack-full:latest
                environment:
                    - SERVICES=sns,s3
                    - DEBUG=1
                    - DEFAULT_REGION=us-east-2
                    - DATA_DIR=/tmp/localstack/data
        steps:
            - checkout
            - node-install
            - aws-cli/setup
            - node-linter
            - node-test
            - node-report
            - slack-error
    install-build-deploy:
        docker:
            - image: node:12
        steps:
            - checkout
            - node-install
            - npm-deploy
            - slack-status
workflows:
    install-build-deploy:
        jobs:
            - install-build-deploy:
                context:
                    - tools-cicd
                    - npm-org-token
                filters:
                    tags:
                        only: /.*/
                    branches:
                        ignore: /.*/
    install-build-test:
        jobs:
            - install-build-test:
                context:
                    - tools-cicd
                    - npm-org-token
                filters:
                    tags:
                        ignore: /.*/
                    branches:
                        ignore: /dependabot.*/
